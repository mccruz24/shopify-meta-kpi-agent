# Environment Variables Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DATABASE_URL="postgresql://username:password@localhost:5432/kpi_dashboard"
# For production, use a service like Railway, Supabase, or AWS RDS

# =============================================================================
# SECURITY & ENCRYPTION
# =============================================================================
JWT_SECRET="your-super-secret-jwt-key-minimum-32-characters-long"
ENCRYPTION_KEY="your-32-character-encryption-key-here"
NEXTAUTH_SECRET="your-nextauth-secret-key-for-frontend"

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_URL="redis://localhost:6379"
# For production, use Redis Cloud, Upstash, or AWS ElastiCache

# =============================================================================
# API ENDPOINTS
# =============================================================================
# Backend API URL (adjust for your deployment)
NEXT_PUBLIC_API_URL="http://localhost:3001"
NEXTAUTH_URL="http://localhost:3000"

# =============================================================================
# EXTERNAL API CREDENTIALS (for OAuth flows)
# =============================================================================

# Shopify App Credentials (for OAuth)
SHOPIFY_CLIENT_ID="your-shopify-app-client-id"
SHOPIFY_CLIENT_SECRET="your-shopify-app-client-secret"
SHOPIFY_SCOPES="read_orders,read_customers,read_analytics"

# Meta/Facebook App Credentials (for OAuth)
META_APP_ID="your-meta-app-id"
META_APP_SECRET="your-meta-app-secret"

# Printify API (users will provide their own API keys through the UI)
# No global credentials needed - users connect their own accounts

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV="development"
PORT=3001
FRONTEND_PORT=3000
SCHEDULER_PORT=3002

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
# Domain for production (used in OAuth redirects)
PRODUCTION_DOMAIN="https://your-app-domain.com"

# Sentry DSN for error tracking (optional)
SENTRY_DSN="your-sentry-dsn-here"

# =============================================================================
# DEVELOPMENT FLAGS
# =============================================================================
DEBUG_MODE="true"
LOG_LEVEL="debug"
ENABLE_API_LOGGING="true"

# =============================================================================
# FEATURE FLAGS
# =============================================================================
ENABLE_BILLING="false"
ENABLE_MULTI_STORE="true"
ENABLE_WHITE_LABEL="false"

# =============================================================================
# RATE LIMITING
# =============================================================================
API_RATE_LIMIT="100" # requests per minute per user
SCHEDULER_DELAY="1000" # milliseconds between store processing

# =============================================================================
# EMAIL CONFIGURATION (for notifications)
# =============================================================================
# SMTP_HOST="smtp.gmail.com"
# SMTP_PORT="587"
# SMTP_USER="your-email@gmail.com"
# SMTP_PASS="your-app-password"

# =============================================================================
# NOTES
# =============================================================================
# 1. Never commit the actual .env file to git
# 2. Use strong, unique keys for JWT_SECRET and ENCRYPTION_KEY
# 3. For production, use environment-specific values
# 4. API credentials will be stored encrypted in the database per user
# 5. This template includes all possible environment variables